{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,kBACjCE,EAASH,SAASC,cAAc,iBAChCG,EAAWJ,SAASC,cAAc,mBAExC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAAKC,GAChCC,YAAW,WACLN,EAEFI,EAAI,CAAEG,SAAAT,EAAUU,MAAAT,IAGhBM,EAAI,CAAEE,SAAAT,EAAUU,MAAAT,G,GAEjBA,E,IAIFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBnB,EAAAsB,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAE9DM,OAAM,SAAAJ,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBnB,EAAAsB,OAAOI,QAAQ,sBAAuCF,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IA8BlEjB,EAAOyB,iBAAiB,UA1BxB,SAAkBC,GAChBA,EAAMC,iBAEN,IAAIV,EAAQW,SAASzB,EAAQ0B,OACvBC,EAAOF,SAASxB,EAAOyB,OACvBE,EAASH,SAASvB,EAASwB,OAGjC/B,EAAAsB,OAAOY,KACL,cAAgCV,OAAlBL,EAAM,cAA+BK,OAAnBQ,EAAK,gBAAqBR,OAAPS,GACnD,CACEE,QAAShB,EAAQa,EAAOC,EAAS,MAIrC,IAAK,IAAIG,EAAM,EAAGA,GAAOH,EAAQG,IAC/B5B,EAAc4B,EAAKjB,GACUA,GAApBa,EAIX3B,EAAQ0B,MAAQ,GAChBzB,EAAOyB,MAAQ,GACfxB,EAASwB,MAAQ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        res({ position, delay });\n      } else {\n        // Reject\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  let delay = parseInt(delayEl.value);\n  const step = parseInt(stepEl.value);\n  const amount = parseInt(amountEl.value);\n\n  // Показываем подсказку с введёнными значениями для удобства\n  Notify.info(\n    `\\n\\ndelay: ${delay}ms, step: ${step}ms, amount: ${amount}`,\n    {\n      timeout: delay + step * amount + 3000,\n    }\n  );\n\n  for (let idx = 1; idx <= amount; idx++) {\n    createPromise(idx, delay); // Создаём промисы, передаём позицию\n    delay += step; // Увеличиаем задержку с заданным шагом\n  }\n\n  // Очищаем поля формы\n  delayEl.value = '';\n  stepEl.value = '';\n  amountEl.value = '';\n}\n\nformEl.addEventListener('submit', onSubmit);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","res","rej","setTimeout","position","delay","then","param","Notify","success","concat","catch","failure","addEventListener","event","preventDefault","parseInt","value","step","amount","info","timeout","idx"],"version":3,"file":"03-promises.3fdae3e2.js.map"}